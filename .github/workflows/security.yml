name: Security

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: |
          npm audit --audit-level moderate --json > npm-audit.json || true
          
      - name: Upload npm audit results
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-results
          path: npm-audit.json

  slither-analysis:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Slither
        run: |
          pip3 install slither-analyzer
          
      - name: Compile contracts
        run: npm run compile
        
      - name: Run Slither analysis
        run: |
          slither contracts/ --json slither-report.json || true
          slither contracts/ --print human-summary > slither-summary.txt || true
          
      - name: Upload Slither results
        uses: actions/upload-artifact@v4
        with:
          name: slither-analysis
          path: |
            slither-report.json
            slither-summary.txt

  mythril-analysis:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Mythril
        run: |
          pip3 install mythril
          
      - name: Compile contracts
        run: npm run compile
        
      - name: Run Mythril analysis on TokenBotL1
        run: |
          myth analyze contracts/TokenBotL1.sol --solv 0.8.20 --json > mythril-l1.json || true
          
      - name: Run Mythril analysis on TokenBotL2
        run: |
          myth analyze contracts/TokenBotL2.sol --solv 0.8.20 --json > mythril-l2.json || true
          
      - name: Upload Mythril results
        uses: actions/upload-artifact@v4
        with:
          name: mythril-analysis
          path: |
            mythril-l1.json
            mythril-l2.json

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  smart-contract-security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check for common vulnerabilities
        run: |
          echo "üîç Checking for common smart contract vulnerabilities..."
          
          # Check for hardcoded private keys
          if grep -r "0x[a-fA-F0-9]\{64\}" contracts/ scripts/ test/ --exclude-dir=node_modules; then
            echo "‚ùå Potential hardcoded private keys found!"
            exit 1
          fi
          
          # Check for TODO/FIXME comments
          if grep -r "TODO\|FIXME\|XXX" contracts/ --exclude-dir=node_modules; then
            echo "‚ö†Ô∏è TODO/FIXME comments found in contracts"
          fi
          
          # Check for console.log in production code
          if grep -r "console\.log" contracts/; then
            echo "‚ö†Ô∏è console.log statements found in contracts"
          fi
          
          # Check for unsafe external calls
          if grep -r "\.call\|\.delegatecall\|\.staticcall" contracts/; then
            echo "‚ö†Ô∏è Direct external calls found - review for reentrancy protection"
          fi
          
          echo "‚úÖ Basic security checks completed"

  generate-security-report:
    runs-on: ubuntu-latest
    needs: [dependency-scan, slither-analysis, mythril-analysis, smart-contract-security]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Generate security report
        run: |
          echo "# üõ°Ô∏è Security Analysis Report" > security-report.md
          echo "" >> security-report.md
          echo "**Generated**: $(date)" >> security-report.md
          echo "**Commit**: ${{ github.sha }}" >> security-report.md
          echo "" >> security-report.md
          
          echo "## üìä Analysis Summary" >> security-report.md
          echo "" >> security-report.md
          echo "| Tool | Status |" >> security-report.md
          echo "|------|---------|" >> security-report.md
          echo "| NPM Audit | ${{ needs.dependency-scan.result }} |" >> security-report.md
          echo "| Slither | ${{ needs.slither-analysis.result }} |" >> security-report.md
          echo "| Mythril | ${{ needs.mythril-analysis.result }} |" >> security-report.md
          echo "| Basic Checks | ${{ needs.smart-contract-security.result }} |" >> security-report.md
          echo "" >> security-report.md
          
          echo "## üîß Recommendations" >> security-report.md
          echo "" >> security-report.md
          echo "- Review all findings from static analysis tools" >> security-report.md
          echo "- Update dependencies with known vulnerabilities" >> security-report.md
          echo "- Consider formal verification for critical functions" >> security-report.md
          echo "- Schedule regular security audits" >> security-report.md
          echo "- Implement multi-signature for owner functions" >> security-report.md
          
      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md
          
      - name: Comment on PR with security summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üõ°Ô∏è Security Analysis Results\n\n${report}\n\n*This is an automated security report. Please review all findings.*`
            });